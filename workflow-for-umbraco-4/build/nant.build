<?xml version="1.0" ?>
<project name="umbraco" default="package" basedir=".">
  <description>Workflow for Umbraco</description>

  <property name="umbraco.dir" value="C:\Users\darren.ferguson\Downloads\build" />
  
  <!-- global properties, generally won't change -->
  <property name="nant.settings.currentframework" value="net-3.5" />
  <property name="dist.name" value="fmworkflow" />
  <property name="dist.version" value="2.1" />

  <property name="package.name" value="${dist.name}_${dist.version}_${datetime::get-ticks(datetime::now())}" />

  <!-- Directories storing the public package -->
  <property name="public.dir" value="D:\inetpub\wwwroot\nightlies\${dist.name}" />

  <!-- windows folder reference -->
  <property name="win.dir" value="c:\WINDOWS" />
  
  <!-- root of the project -->
  <property name="root.dir" value="${directory::get-current-directory()}" />

  <!-- The sub-projects -->
  <property name="core.dir" value="${root.dir}\..\Umbraco.Solution" />

  <!-- Build related folders -->
  <property name="package.dir" value="${root.dir}\out\package" />
  <property name="zip.dir" value="${root.dir}\out\zip" />
  <property name="dlls.dir" value="${root.dir}\foreign dlls" />

  <!-- Applications -->
  <property name="msbuild.app" value="${win.dir}\microsoft.net\framework\v4.0.30319\msbuild.exe" />
  <property name="addfilestopackage.app" value="${root.dir}\AddFilesToPackage.exe" />
  
  <target name="package" depends="zip">
    <!-- here we won't do anything -->
  </target>
  
  <target name="compile" depends="init">
    <attrib normal="true" readonly="false">
      <fileset basedir="${root.dir}">
        <include name="**/*" />
      </fileset>
    </attrib>

    <exec program="${msbuild.app}" basedir="${core.dir}">
      <arg value="${core.dir}\Workflow.Umbraco4.sln" />
      <arg value="/p:Configuration=Release"/>
      <arg value="/p:Platform=&quot;Any CPU&quot;"/>
    </exec>
  </target>

  <target name="debugcompile" depends="init">
    <attrib normal="true" readonly="false">
      <fileset basedir="${root.dir}">
        <include name="**/*" />
      </fileset>
    </attrib>

    <exec program="${msbuild.app}" basedir="${core.dir}">
      <arg value="${core.dir}\Workflow.Umbraco4.sln" />
      <arg value="/p:Configuration=Debug"/>
      <arg value="/p:Platform=&quot;Any CPU&quot;"/>
    </exec>
  </target>

  <target name="merge">
		<exec program="C:\Program Files (x86)\Microsoft\ILMerge\ilmerge" basedir="${root.dir}\..\">
			<arg value="/lib:${umbraco.dir}/bin"/>
   <arg value="/ndebug:false"/>
			<arg value="/targetplatform:v4,C:\Windows\Microsoft.NET\Framework\v4.0.30319"/>
			<arg value="/out:${package.dir}\..\FergusonMoriyama.Umbraco4.Workflow.dll"/>
			<arg value="${root.dir}\..\Umbraco.Web.Ui\bin\FergusonMoriyam.Workflow.Umbraco.Web.Ui.dll"/>
			<arg value="${root.dir}\..\Umbraco.Application\bin\Release\FergusonMoriyam.Workflow.Umbraco.Application.dll"/>
			<arg value="${root.dir}\..\Umbraco.Domain\bin\Release\FergusonMoriyam.Workflow.Umbraco.Domain.dll"/>
			<arg value="${root.dir}\..\Umbraco.Infrastructure\bin\Release\FergusonMoriyam.Workflow.Umbraco.Infrastructure.dll"/>
			<arg value="${root.dir}\..\Umbraco.Task\bin\Release\FergusonMoriyam.Workflow.Umbraco.Task.dll"/>
			<arg value="${root.dir}\..\Umbraco.Installer\bin\Release\FergusonMoriyam.Workflow.Umbraco.Installer.dll"/>
			<arg value="${root.dir}\..\Umbraco.Ui\bin\FergusonMoriyam.Workflow.Umbraco.Ui.dll"/>
		</exec>
  </target>

  <target name="debugmerge">
    <exec program="C:\Program Files (x86)\Microsoft\ILMerge\ilmerge" basedir="${root.dir}\..\">
      <arg value="/lib:${umbraco.dir}"/>
      <arg value="/targetplatform:v4,C:\Windows\Microsoft.NET\Framework\v4.0.30319"/>
      <arg value="/out:${package.dir}\..\FergusonMoriyama.Umbraco4.Workflow.dll"/>
      <arg value="${root.dir}\..\Umbraco.Web.Ui\bin\FergusonMoriyam.Workflow.Umbraco.Web.Ui.dll"/>
      <arg value="${root.dir}\..\Umbraco.Application\bin\Debug\FergusonMoriyam.Workflow.Umbraco.Application.dll"/>
      <arg value="${root.dir}\..\Umbraco.Domain\bin\Debug\FergusonMoriyam.Workflow.Umbraco.Domain.dll"/>
	    <arg value="${root.dir}\..\Umbraco.Infrastructure\bin\Debug\FergusonMoriyam.Workflow.Umbraco.Infrastructure.dll"/>
      <arg value="${root.dir}\..\Umbraco.Task\bin\Debug\FergusonMoriyam.Workflow.Umbraco.Task.dll"/>
	    <arg value="${root.dir}\..\Umbraco.Installer\bin\Debug\FergusonMoriyam.Workflow.Umbraco.Installer.dll"/>
      <arg value="${root.dir}\..\Umbraco.Ui\bin\FergusonMoriyam.Workflow.Umbraco.Ui.dll"/>
    </exec>

    <delete>
      <fileset basedir="${umbraco.dir}\bin">
        <include name="FergusonMoriyama.Umbraco4.Workflow.dll" />
        <include name="FergusonMoriyama.Umbraco4.Workflow.pdb" />
      </fileset>
    </delete>

    <copy todir="${umbraco.dir}\bin" overwrite="true">
      <fileset basedir="${root.dir}\out">
        <include name="FergusonMoriyama.Umbraco4.Workflow.dll" />
        <include name="FergusonMoriyama.Umbraco4.Workflow.pdb" />
      </fileset>
    </copy>

  </target>

  <target name="movefiles" depends="compile,merge" description="Moves the build files into the right folders and prepares it for packaging">
 
    <!-- Usercontrols -->
    <mkdir dir="${package.dir}\usercontrols\${dist.name}" />
    <copy todir="${package.dir}\usercontrols\${dist.name}" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\..\Umbraco.Web.Ui">
        <include name="*.ascx" />
      </fileset>
    </copy>

	<mkdir dir="${package.dir}\config\${dist.name}" />
    <copy todir="${package.dir}\config\${dist.name}" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\..\Umbraco.Web.Ui\config\${dist.name}">
        <include name="*.config" />
      </fileset>
    </copy>
		
    <!-- DLLS -->
    <mkdir dir="${package.dir}\bin" />

    <copy todir="${package.dir}\bin" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${package.dir}\..\">
        <include name="FergusonMoriyama.Umbraco4.Workflow.dll" />
      </fileset>
    </copy>
	
	<copy todir="${package.dir}\bin" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\dll">
        <include name="Common.Logging.dll" />
		    <include name="Spring*.dll" />
		    <include name="PackageActionsContrib.dll" />
        <!-- <include name="log4net.dll" /> -->
      </fileset>
    </copy>
	
	<copy todir="${package.dir}\bin" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\..\..\wf\FergusonMoriyama.Workflow\Solution Items\">
        <include name="*.dll" />
      </fileset>
    </copy>

    <echo>Looking for: ${root.dir}\..\..\workflow\build\out</echo>

    <copy todir="${package.dir}\bin" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      
    <fileset basedir="${root.dir}\..\..\workflow\build\out">
        <include name="FergusonMoriyama.Workflow.dll" />
      </fileset>
    </copy>
	
    <!-- plugins -->
    <mkdir dir="${package.dir}\umbraco\plugins\${dist.name}" />
    <copy todir="${package.dir}\umbraco\plugins\${dist.name}" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\..\Umbraco.Web.Ui">
        <include name="*.aspx" />
      </fileset>
    </copy>
      
	<!--<copy todir="${package.dir}\umbraco" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}">
        <include name="umbraco.aspx" />
      </fileset>
    </copy> -->
	 
	<mkdir dir="${package.dir}\umbraco\plugins\${dist.name}\images" />
    <copy todir="${package.dir}\umbraco\plugins\${dist.name}\images" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\..\Umbraco.Web.Ui\images">
        <include name="*.png" />
      </fileset>
    </copy>

  <mkdir dir="${package.dir}\umbraco\plugins\${dist.name}\js" />

    <copy todir="${package.dir}\umbraco\plugins\${dist.name}\js" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\..\Umbraco.Web.Ui\js">
        <include name="speechbubble.js" />
      </fileset>
    </copy>
    
	<mkdir dir="${package.dir}\umbraco\plugins\${dist.name}\css" />
    <copy todir="${package.dir}\umbraco\plugins\${dist.name}\css" includeemptydirs="true" flatten="false" failonerror="false" overwrite="true">
      <fileset basedir="${root.dir}\..\Umbraco.Web.Ui\userCss">
        <include name="*.css" />
      </fileset>
    </copy>
	
    <!-- Clean up -->
    <delete>
      <fileset>
        <include name="${package.dir}/**/*.cs" />
        <include name="${package.dir}/**/*.build" />
        <include name="${package.dir}/**/*.csproj" />
        <include name="${package.dir}/**/*.vspscc" />
        <include name="${package.dir}/**/*.scc" />
        <include name="${package.dir}/**/*.sln" />
        <include name="${package.dir}/**/*.compiled" />
        <include name="${package.dir}/**/*.resx" />
        <include name="${package.dir}/PrecompiledApp.config" />
      </fileset>
    </delete>

    <!-- Copy the base package file to the package dir -->
    <copy file="${root.dir}\package.xml" tofile="${package.dir}\package.xml" failonerror="false" overwrite="true"/>
  </target>

  
  <target name="manifest" depends="movefiles">
    <!-- here we will append files in the package directory to the package file-->
    <!-- args: manifest, folder with files in correct structure, folder to send to for zipping-->
    <exec program="${addfilestopackage.app}">
      <arg value="${package.dir}\package.xml" />
      <arg value="${package.dir}" />
      <arg value="${zip.dir}" />
    </exec>

    <!-- Poke the version number -->
    <xmlpoke file="${zip.dir}\package.xml" xpath="/umbPackage/info/package/version" value="${dist.version}" />
    
  </target>
  
  <target name="zip" description="zip the release" depends="manifest">

    <!-- Zip everything -->
    <zip zipfile="${root.dir}\${dist.name}_${dist.version}_${datetime::get-ticks(datetime::now())}.zip" includeemptydirs="true" >
      <fileset basedir="${zip.dir}">
        <include name="*" />
        <include name="**/*" />
      </fileset>
    </zip>

  </target>
  
  <target name="init" description="init tasks for the build">
    <delete dir="${package.dir}" />
    <delete dir="${zip.dir}" />

    <mkdir dir="${package.dir}" />
    <mkdir dir="${zip.dir}" />
  </target>

  <target name="debug" depends="debugcompile,debugmerge"/>
  
</project>
